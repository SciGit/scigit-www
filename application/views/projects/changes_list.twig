<script>
  var __entityMap = {
    "&": "&amp;",
    "<": "&lt;",
    ">": "&gt;",
    '"': '&quot;',
    "'": '&#39;',
    "/": '&#x2F;'
  };

  String.prototype.escapeHTML = function() {
    return String(this).replace(/[&<>"'\/]/g, function (s) {
      return __entityMap[s];
    });
  }

  $(document).ready(function() {
    $('.changes').click(function(e) {
      e.preventDefault();
    });

    $('.diff .nav').click(function(e) {
      if (e.target == this ||
          e.target.tagName.toLowerCase() == 'div' ||
          e.target.tagName.toLowerCase() == 'li') {
        var target = this;
        $('.diff').find('.nav').each(function() {
          $(this).addClass('inactive');
          $(this).removeClass('active');
        });
        $(this).removeClass('inactive');
        $(this).popover('toggle');
        $(this).addClass('transition-paused').addClass('active');
        setTimeout(function() { $(this).removeClass('transition-paused'); }, 500);
      }
    });

    $('body').append($('#diffs'));

    $('.diff').each(function() {
      $('#diffs').append(this);
    });
  });

  function formatDiff(diff, change_id) {
    var formatted = new Object();
    formatted.diff = diff;
    var lines = formatted.diff.split('\n');
    var curLineNum = 1;
    var numDeletions = 0;
    var fileName = '';
    var fileNameWithoutPath;
    var createdFiles = new Array();
    var deletedFiles = new Array();
    var changedFiles = new Array();
    var ignoreUntilNextFile = true;
    var firstChangeSetInFile = true;
    var startOfFile;

    function addCurrentFileToChangedList() {
      if (!ignoreUntilNextFile) {
        changedFiles.push(fileNameWithoutPath);
      }
    }

    for (var line in lines) {
      if (lines[line].indexOf('diff --git') === 0) {
        var header = '';
        // We got a new file, and there was one we were processing before this
        // one.
        if (fileName != '') {
          // If we weren't skipping the last file because it was deleted or
          // invalid, we should add it to the list of files changed.
          addCurrentFileToChangedList();
          header = '</table></pre>';
        }

        fileName = lines[line].match(/diff --git "?a\/(.*)"? "?b\//);

        fileNameWithoutPath = fileName;
        fileNameWithoutPath = fileNameWithoutPath[1].replace(/^.*[\\\/]/, '');
        lines[line] = header +
                      '<pre id="' + fileNameWithoutPath + '_' + change_id + '" class="highlight"><table class="table diff-text"><tr><th></th><th>' +
                      fileName[1] +
                      '</th></tr>';
        curLineNum = 1;
        startOfFile = line;
        ignoreUntilNextFile = false;
        firstChangeSetInFile = true;
      } else if (lines[line].indexOf('deleted') === 0) {
        deletedFiles.push(fileNameWithoutPath);
        lines[line] = null;
      } else if (lines[line].indexOf('new file') === 0) {
        createdFiles.push(fileNameWithoutPath);
        lines[line] = null;
      } else if (lines[line].indexOf('index') === 0 ||
                 lines[line].indexOf('deleted') === 0 ||
                 lines[line].indexOf('--') === 0 ||
                 lines[line].indexOf('++') === 0 ||
                 lines[line].indexOf('file: ') === 0 ||
                 lines[line].indexOf('new file mode') === 0) {
        lines[line] = null;
      } else if (lines[line][0] == '@') {
        if (ignoreUntilNextFile) {
          lines[line] = null;
          continue;
        }

        var lineInFile = lines[line].match(/\d+/);
        if (lineInFile == 0) {
          lineInFile = 1;
        }

        curLineNum = lineInFile;

        if (lineInFile >= 0 && !firstChangeSetInFile) {
          lines[line] = '<tr><td class="linenumber"></td><td class="content change-line">&nbsp;' +
                        '</td></tr>';
        } else {
          lines[line] = null;
          firstChangeSetInFile = false;
        }
      } else {
        if (ignoreUntilNextFile) {
          lines[line] = null;
          continue;
        }

        var changeType = '';
        if (lines[line][0] == '+') {
          changeType = 'change-addition';
          lines[line] = ' ' + lines[line].slice(1, lines[line].length).escapeHTML();
          curLineNum -= numDeletions;
          numDeletions = 0;
        } else if (lines[line][0] == '-') {
          changeType = 'change-deletion';
          lines[line] = ' ' + lines[line].slice(1, lines[line].length).escapeHTML();
          numDeletions++;
        } else {
          lines[line] = lines[line].escapeHTML();
        }

        lines[line] = '<tr><td class="linenumber">' +
                      curLineNum++ +
                      '</td><td class="content ' + changeType + '">' +
                      lines[line] +
                      '</td></tr>';
      }
    }

    if (fileName != '') {
      addCurrentFileToChangedList();
    }

    formatted.diff = '';
    formatted.changedFiles = '';
    formatted.deletedFiles = '';
    formatted.createdFiles = '';
    var foundLineWithActualContent;
    for (var line in lines) {
      if (lines[line] !== null) {
        if (lines[line].length > 0) {
          foundLineWithActualContent = true;
        }

        formatted.diff = formatted.diff + lines[line] + '\n';
      }
    }
    formatted.diff += '</table></pre>';

    if (changedFiles.length > 0) {
      var changedFilesString = '<li class="nav-header">Updated Files</li><hr class="soften" />';

      foundLineWithActualContent = true;

      var first = ' class="active"';
      for (var changedFile in changedFiles) {
        // Don't include created or deleted files in the changed files list.
        var foundFileInCreatedOrDeletedFiles = false;
        for (var createdFile in createdFiles) {
          if (createdFiles[createdFile] == changedFiles[changedFile]) {
            foundFileInCreatedOrDeletedFiles = true;
            break;
          }
        }

        if (!foundFileInCreatedOrDeletedFiles) {
          for (var deletedFile in deletedFiles) {
            if (deletedFiles[deletedFile] == changedFiles[changedFile]) {
              foundFileInCreatedOrDeletedFiles = true;
              break;
            }
          }
        }

        if (!foundFileInCreatedOrDeletedFiles) {
          changedFilesString += '<li' + first + '><a href="#' + changedFiles[changedFile] + '_' + change_id + '">' +
                                changedFiles[changedFile] + '</a></li>';
          first = '';
        }
      }

      formatted.changedFiles += changedFilesString;
      formatted.changedFiles += '<i class="icon-play icon-large arrow"></i>';
    }

    if (deletedFiles.length > 0) {
      var deletedFilesString = '<li class="nav-header">Deleted Files</li><hr class="soften" />';

      foundLineWithActualContent = true;

      for (var deletedFile in deletedFiles) {
        deletedFilesString += '<li><a href="#' + deletedFiles[deletedFile] + '_' + change_id + '">' + deletedFiles[deletedFile] + '</a></li>';
      }

      formatted.deletedFiles += deletedFilesString;
      formatted.deletedFiles += '<i class="icon-play icon-large arrow"></i>';
    }

    if (createdFiles.length > 0) {
      var createdFilesString = '<li class="nav-header">Created Files</li><hr class="soften" />';

      foundLineWithActualContent = true;

      for (var createdFile in createdFiles) {
        createdFilesString += '<li><a href="#' + createdFiles[createdFile] + '_' + change_id + '">' + createdFiles[createdFile] + '</a></li>';
      }

      formatted.createdFiles += createdFilesString;
      formatted.createdFiles += '<i class="icon-play icon-large arrow"></i>';
    }

    if (!foundLineWithActualContent) {
      formatted.diff = 'No changes made. Oops!';
    }

    return formatted;
  }

  function expandChanges(change) {
    var change_id = change.getAttribute('data-change_id');
    var td = $("[data-change_id='" + change_id + "']");

    var icon = $(td).find('.icon-plus-sign-alt');

    if (icon.length !== 0 && !icon.data('diffLoaded')) {
      icon.removeClass('icon-plus-sign-alt')
          .addClass('icon-spinner')
          .addClass('icon-spin');

      var form_data = {
        id : change_id,
      };

      $.ajax({
        url: "/changes/diff_ajax",
        type: "POST",
        data: form_data,
        dataType: "json",
        cache: false,

        success: function(json) {
          if (json.error == 0) {
            $(td).find('.icon-spin').removeClass('icon-spin')
                                    .removeClass('icon-spinner')
                                    .addClass('icon-plus-sign-alt');
            var formattedDiff = formatDiff(json.message, change_id);
            var diffElement = $("div.diff[data-change_id='" + change_id + "']");
            var textElement = diffElement.find('.modal-body').find('.text');
            var modalBodyElement = diffElement.find('.modal-body');
            textElement.html(formattedDiff.diff);
            modalBodyElement.find('.changed-files').html(formattedDiff.changedFiles);
            modalBodyElement.find('.deleted-files').html(formattedDiff.deletedFiles);
            modalBodyElement.find('.created-files').html(formattedDiff.createdFiles);
            diffElement.modal('show');

            icon.data('diffLoaded', 'true');

            diffElement.on('shown', function() {
              // XXX: This is all generally ugly. We should clean it up eventually.
              var currentlyScrolledElement = null;
              modalBodyElement.on('scroll', function(e) {
                var outerScrollTop = $(this).scrollTop();
                var outerHeight = $(this).parent().height() - 100;
                var highestPercentageInView = 0;
                var highestPercentageInViewIndex = null;

                modalBodyElement.find('pre').each(function() {
                  var innerScrollTop = $(this).position().top;
                  var innerHeight = $(this).height();

                  var percentageInView = (Math.min(outerScrollTop + innerScrollTop + innerHeight, outerScrollTop + outerHeight) -
                                          Math.max(outerScrollTop + innerScrollTop, outerScrollTop)) /
                                         innerHeight;

                  if (percentageInView > highestPercentageInView ||
                      // If there are multiple files on the page that are entirely in view,
                      // pick the one that is lowest.
                      (highestPercentageInViewIndex !== null &&
                       Math.abs(percentageInView - highestPercentageInView) < 0.1 &&
                       innerScrollTop > $(highestPercentageInViewIndex).position().top)) {
                    highestPercentageInView = percentageInView;
                    highestPercentageInViewIndex = this;
                  }
                });

                if (highestPercentageInViewIndex !== null &&
                    highestPercentageInViewIndex !== currentlyScrolledElement) {
                  if (currentlyScrolledElement !== null) {
                    var id = $(currentlyScrolledElement).attr('id');
                    $('a[href="#' + id + '"]').parent().removeClass('active');
                  }

                  currentlyScrolledElement = highestPercentageInViewIndex;
                  var id = $(currentlyScrolledElement).attr('id');
                  $('a[href="#' + id + '"]').parent().addClass('active');
                }
              });
            });
          } else {
            $(td).find('.icon-spin').removeClass('icon-spin')
                                    .removeClass('icon-spinner')
                                    .addClass('icon-plus-sign-alt');
          }
        }
      });
    } else {
      var diffElement = $("div.diff[data-change_id='" + change_id + "']'");
      diffElement.modal('show');
    }
  }
</script>

<div id="diffs">

</div>

<div class="well-list">
  <table class="table table-condensed">
    <tr>
      <th>
        <h1>
          All Updates
          {% if not show_all and changes %}
            <div class="pull-right">
              <a class="btn title-btn" href="{{ site_url("/projects/changes/#{project.id}") | raw }}">
                <i class="icon-circle-arrow-up"></i>
                View all
              </a>
            </div>
          {% endif %}
        </h1>
      </th>
    </tr>
    {% if changes %}
      {% for change in changes %}
        <tr>
          <td class="change" valign="middle" data-change_id="{{ change.id }}">
            {{ anchor("/users/profile/#{change.user_id}", change.username) | raw }} updated:
            <div class="buttons">
              <div class="button">
                {% if show_all %}
                  <em>{{ change.commit_ts | date('M d, Y') }} at {{ change.commit_ts | date('H:m a') }}</em>
                {% else %}
                  <em>{{ time_ago(change.commit_ts) }}</em>
                {% endif %}
              </div>
              <div class="button">
                <a href="#" class="rawlink" onclick="expandChanges(this)" data-change_id="{{ change.id }}" rel="tooltip" title="Expand differences">
                  <i class="changes icon-plus-sign-alt icon-large"></i>
                </a>
              </div>
              <div class="button">
                <a href="/changes/files/{{ change.id }}" class="rawlink" rel="tooltip" title="View all files">
                  <i class="icon-folder-close icon-large"></i>
                </a>
              </div>
            </div>
            <div class="description">
              {{ anchor("/changes/view/#{change.id}", change.commit_msg) | raw }}
            </div>
            <div class="modal modal-responsive hide fade diff" data-change_id="{{ change.id }}">
              <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>
                <h3>
                  {% if change.commit_msg | length > 30 %}
                    {{ change.commit_msg | slice(0, 30) }} ...
                  {% else %}
                    {{ change.commit_msg }}
                  {% endif %}
                </h3>
              </div>
              <div class="modal-body">
                <div class="row-fluid">
                  <div class="files" data-change_id="{{ change.id }}">
                    {% set settings = "data-toggle=popover data-placement=right" %}
                    <ul class="nav nav-list changed-files" {{ settings }}
                     data-content="You are now viewing only deleted files. Click here again to view all changes."
                     data-original-title="Viewing Only Deleted Files">
                    </ul>
                    <ul class="nav nav-list deleted-files" {{ settings }}
                     data-content="You are now viewing only deleted files. Click here again to view all changes."
                     data-original-title="Viewing Only Deleted Files">
                    </ul>
                    <ul class="nav nav-list created-files" {{ settings }}
                     data-content="You are now viewing only created files. Click here again to view all changes."
                     data-original-title="Viewing Only Created Files">
                    </ul>
                  </div>
                  <div class="text" data-change_id="{{ change.id }}">
                  </div>
                </div>
              </div>
              <div class="modal-footer">
                <a class="btn btn-primary" data-dismiss="modal">Close</a>
              </div>
            </div>
          </td>
        </tr>
      {% endfor %}
    {% else %}
      <tr class="nohover">
        <td class="tabular">
          No changes yet.
        </td>
      </tr>
    {% endif %}
  </table>
</div>
