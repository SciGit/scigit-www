<script>
var existingOrNew = 0;

$(document).ready(function() {
  $("#option-subscriber").popover();
  $(".deleteMember").each(function() {
    if ($(this).attr("disabled") == "disabled") {
      return;
    }

    $(this).popover({
      html: true,
      content: function() {
        return $("#deleteMemberPopoverContent").html();
      },
      placement: "top",
      trigger: 'manual',
    });
    $(this).tooltip();
    $(this).data("hasTooltip", true);
  });
  $(".deleteMember").click(function(e) {
    var target = $(e.target).prop('tagName').toLowerCase() == 'a' ? $(e.target) : $(e.target).parent();
    if (target.attr("disabled") == "disabled") {
      e.stopPropagation();
      e.preventDefault();
      return false;
    }

    target.popover('toggle');

    $("#deleteMember").data("deletingMember", $(this).data("user_id"));

    $(this).data("hasTooltip", !$(this).data("hasTooltip"));
    if ($(this).data("hasTooltip")) {
      $(this).tooltip();
    } else {
      $(this).tooltip('destroy');
    }
  });
  $("#members").on("click", ".deleteMemberConfirm", function(event) {
    var user_id = $("#deleteMember").data("deletingMember");
    $.ajax({
      url: '/projects/member_delete_ajax',
      type: 'post',
      data: {user_id: user_id, proj_id: {{ project.id }}},
      dataType: 'json',
      success: function(json) {
        if (json.error == 0) {
          $('.popover .deleteMemberSuccess').html(json.message).show();
          $('.popover .deleteMemberError').hide();
          setTimeout(function() {
            document.location.reload(true);
          }, 2000);
        } else {
          $('.popover .deleteMemberSuccess').hide();
          $('.popover .deleteMemberError').html(json.message).show();
        }
      }
    });
  });

  $("#addMember").submit(addMember);
  $("#editMember").submit(editMember);

  $("#btnEditDescription").click(function() {
    $("#description").hide();
    $("#editDescription").show();
  });

  $(".editMember").each(function() {
    if ($(this).attr("disabled") == "disabled") {
      return;
    }

    $(this).tooltip();
  });

  $(".editMember").click(function(e) {
    var target = $(e.target).prop('tagName').toLowerCase() == 'a' ? $(e.target) : $(e.target).parent();
    if (target.attr("disabled") == "disabled") {
      e.stopPropagation();
      e.preventDefault();
      return true;
    }

    $("#editMember").data("editingMember", $(this).data("user_id"));
    $("#editMember").data("editingMemberName", $(this).data("user_name"));

    $("#editMemberName").html(
      "Edit " + $(this).data("user_name") + "'s Permissions");

    var permission = $(this).data("user_perm");
    if (permission & 8 /* Administrator */) {
      $('#editMember input[type="radio"][value="1"]').click();
    } else if (permission & 4 /* Contributor */) {
      $('#editMember input[type="radio"][value="2"]').click();
    } else if (permission & 2 /* Reader */) {
      $('#editMember input[type="radio"][value="3"]').click();
    } else if (permission & 1 /* Subscriber */) {
      $('#editMember input[type="radio"][value="4"]').click();
    }
  });

  $("#permission .btn").click(function(e) {
    var isPrivateProject = {{ not project.public }};
    var radio = $(e.target).find('input[type="radio"]');
    if (radio.length == 0) {
      radio = $(e.target);
    }

    if (isPrivateProject && radio[0].value == 4) {
      e.preventDefault();
      return true;
    }

    $(e.target).parents("#permission").find(".span3").each(function() {
      $(this).addClass("faded");
    })

    $(this).find('input[type="radio"]').attr("checked", true);
    $(this).parent().removeClass("faded");
  })

  this.lastQuery = null;

  $('#user-invite input').typeahead({
    source: function(query, process) {
      return $.ajax({
        url: '/users/autocomplete_ajax',
        type: 'get',
        data: {query: query},
        dataType: 'json',
        success: function(json) {
          return typeof json.options == 'undefined' ? false : process(json.options);
        }
      });
    },

    matcher: function(item) {
      if (item.toLowerCase() === this.query.toLowerCase()) {
        $("#user-invite i").attr("class", "icon-ok-sign")
                           .css("color", "green");
      } else if (this.lastQuery != this.query) {
        this.lastQuery = this.query;
        $("#user-invite i").attr("class", "icon-remove-sign")
                           .css("color", "red");
      }

      return true;
    },

    updater: function(item) {
      $("#user-invite i").attr("class", "icon-ok-sign")
                         .css("color", "green");
      return item;
    },

    minLength: 3,
  });

  function updateSendFormField(field) {
    if (field == 'username') {
      existingOrNew = 0;

      $("#email-invite").addClass("faded");
      $("#user-invite").removeClass("faded");
    } else if (field == 'email') {
      existingOrNew = 1;

      $("#user-invite").addClass("faded");
      $("#email-invite").removeClass("faded");
    }

    return;
  }

  $('#user-invite input').on('change', function() {
    updateSendFormField('username');
  });
  $('#user-invite input').on('change keypress', function() {
    updateSendFormField('username');
  });

  function validateEmail(field) {
    var re = /\S+@\S+\.\S+/;
    if (re.test(field.value)) {
      $("#email-invite i").attr("class", "icon-ok-sign")
                          .css("color", "green");
    } else {
      $("#email-invite i").attr("class", "icon-remove-sign")
                          .css("color", "red");
    }
  }

  $('#email-invite input').live('change', function() {
    updateSendFormField('email');
    validateEmail(this);
  });
  $('#email-invite input').live('change keypress', function() {
    updateSendFormField('email');
    validateEmail(this);
  });
});

function editMember(event) {
  $("#btn-edit-member").addClass("disabled");
  $("#btn-edit-member").data("oldHtml", $("#btn-edit-member").html());
  $("#btn-edit-member").html('<i class="icon-spinner icon-spin"></i> Loading...');
  $("#btn-edit-cancel").addClass("disabled");

  var form_data = {
    username : $("#editMember").data("editingMemberName"),
    email : null,
    permission : Number($("#editMember input[name='permission']:checked").val()),
    proj_id: {{ project.id }},
    type: "edit",
  };

  submitMemberForm("#editMember", form_data);
}

function addMember(event) {
  event.preventDefault();

  $("#btn-add-member").addClass("disabled");
  $("#btn-add-member").data("oldHtml", $("#btn-add-member").html());
  $("#btn-add-member").html('<i class="icon-spinner icon-spin"></i> Loading...');
  $("#btn-add-cancel").addClass("disabled");

  var username = $("#addMember input[name='username']").val();
  var email = $("#addMember input[name='email']").val();

  var form_data = {
    username : (existingOrNew == 0 ? username : null),
    email : (existingOrNew == 1 ? email : null),
    permission : Number($("#addMember input[name='permission']:checked").val()),
    proj_id: {{ project.id }},
    type: "add",
  };

  submitMemberForm("#addMember", form_data);
}

function submitMemberForm(root, form_data) {
  $.ajax({
    url: "/projects/member_add_ajax",
    type: "POST",
    data: form_data,
    dataType: "json",
    cache: false,

    success: function(json) {
      $(root + ' [id^="btn-"][id$="-member"]').removeClass("disabled");
      $(root + ' [id^="btn-"][id$="-member"]').html(
        $(root + ' [id^="btn-"][id$="-member"]').data("oldHtml"));
      $(root + ' [id^="btn-"][id$="-cancel"]').removeClass("disabled");

      if (json.error == 0) {
        if (root == "#addMember") {
          $("#user-invite input").val("");
          $("#email-invite input").val("");

          $("#user-invite i").attr("class", "");
          $("#email-invite i").attr("class", "");

          $("#user-invite").removeClass("faded");
          $("#email-invite").removeClass("faded");
        }

        $(root + " " + root + "Success").html('<i class="icon-ok-sign"></i>' + json.message).show();
        $(root + " " + root + "Error").hide();

        setTimeout(function() {
          $(root).modal("hide");
          setTimeout(function() {
            document.location.reload(true);
          }, 500);
        }, 2000);
      } else {
        $(root + " " + root + "Success").hide();
        $(root + " " + root + "Error").html('<i class="icon-remove-sign"></i>' + json.message).show();
      }
    }
  })
}
</script>

<div id="deleteMember" class="hide"></div>
<div id="deleteMemberPopoverContent" class="hide">
  <div class="deleteMemberError alert alert-error hide"></div>
  <div class="deleteMemberSuccess alert alert-success hide"></div>
  <div class="center">
    <p>Are you sure?</p>
    <a class="deleteMemberConfirm btn btn-danger">Confirm</a>
  </div>
</div>

<div id="editMember" class="modal modal-large hide fade">
  <div class="modal-header">
    <button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>
    <h1 id="editMemberName">Edit Member Permissions</h1>
  </div>
  <div class="modal-body">
    <div id="editMemberError" class="alert alert-error hide"></div>
    <div id="editMemberSuccess" class="alert alert-success hide"></div>
    {% include 'projects/members_permissions.twig' %}
  </div>
  <div class="modal-footer">
    <a id="btn-edit-member" onclick="$('#editMember').submit();" class="btn btn-primary">Submit</a>
    <a id="btn-edit-cancel" class="btn" data-dismiss="modal">Cancel</a>
  </div>
</div>

<div id="addMember" class="modal modal-large hide fade">
  <div class="modal-header">
    <button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>
    <h1>Add Member</h1>
  </div>
  <div class="modal-body">
    <div id="addMemberError" class="alert alert-error hide"></div>
    <div id="addMemberSuccess" class="alert alert-success hide"></div>
    {{ form_open("/projects/invite/#{project.id}", {id: 'addMember'}) | raw }}
      <h3>Step 1: New or Existing User</h3>
      <h6>Who do you want to add to the project as a contributor?</h6>
      <p></p>
      <div class="row-fluid">
        <div id="user-invite" class="span6 center well">
          <h4>Existing User</h4>
          <p></p>
          <p>Does the contributor you want to add already have a SciGit account? Search for them here.</p>
          {{ form_input({class: 'full-width-input', placeholder: 'Username', name: 'username', maxlength: 40, autocomplete: 'off'}) | raw }}
          <i class="hide"></i>
        </div>
        <div id="email-invite" class="span6 center well">
          <h4>New User</h4>
          <p></p>
          <p>Invite someone to SciGit! Once they've joined, they'll be added to your project.</p>
          {{ form_input({class: 'full-width-input', placeholder: 'Email Address', name: 'email', maxlength: 40, autocomplete: 'off'}) | raw }}
          <i class="hide"></i>
        </div>
      </div>
    {{ form_close() | raw }}
    <h3>Step 2: Permissions</h3>
    <h6>What permissions do you want to give this person?</h6>
    <p></p>
    {% include 'projects/members_permissions.twig' with {project: project} %}
  </div>
  <div class="modal-footer">
    <a id="btn-add-member" onclick="$('#addMember').submit();" class="btn btn-primary">Add Member</a>
    <a id="btn-add-cancel" class="btn" data-dismiss="modal">Cancel</a>
  </div>
</div>

<div id="members" class="well-list">
  <table class="table table-hover table-condensed">
    <tr>
      <th>
        <h2>
          Members
          {% if admin %}
            <div class="pull-right">
              <a href="#addMember" rel="tooltip" title="Add new member" class="btn btn-primary btn-valign" data-toggle="modal">
                <i class="icon-plus"></i> Add
              </a>
            </div>
          {% endif %}
        </h2>
      </th>
    </tr>
    {% for perm in perms %}
      <tr>
        <td class="tabular" valign="middle">
          <div class="statuses">
            <div class="status">
              {% if perm.permission b-and 16 %}
                <a class="rawlink" rel="tooltip" title="Owner">
                  <i class="icon-trophy"></i>
                </a>
              {% elseif perm.permission b-and 8 %}
                <a class="rawlink" rel="tooltip" title="Administrator">
                  <i class="icon-wrench"></i>
                </a>
              {% elseif perm.permission b-and 4 %}
                <a class="rawlink" rel="tooltip" title="Contributor">
                  <i class="icon-edit"></i>
                </a>
              {% elseif perm.permission b-and 2 %}
                <a class="rawlink" rel="tooltip" title="Reader">
                  <i class="icon-eye-open"></i>
                </a>
              {% endif %}
            </div>
          </div>
          {{ anchor("/users/profile/#{perm.user_id}", perm.username) | raw }}
          <div class="buttons shrink">
            <a class="editMember btn btn-small" href="#editMember"
             data-user_id="{{ perm.user_id }}" data-user_name="{{ perm.username }}"
             data-user_perm="{{ perm.permission }}"
             title="Edit {{ perm.username }}'s permissions"
             data-toggle="modal"
             {% if (perm.permission b-and 16) %}disabled="disabled"{% endif %}>
              <i class="icon-edit"></i>
            </a>
            <a class="deleteMember btn-danger btn btn-small" href="#" data-user_id="{{ perm.user_id }}"
             title="Remove {{ perm.username }} from project"
             {% if (perm.permission b-and 16) %}disabled="disabled"{% endif %}>
              <i class="icon-trash"></i>
            </a>
          </div>
        </td>
      </tr>
    {% endfor %}
  </table>
</div>
